# SF插件
sf_keys: []
sfBaseUrl: "https://api.siliconflow.cn/v1"
translateModel: "Vendor-A/Qwen/Qwen2-72B-Instruct"
generatePrompt: true
num_inference_steps: 20
imageModel: "black-forest-labs/FLUX.1-schnell"
free_mode: false
simpleMode: false
sf_textToPaint_Prompt: "请按照我的提供的要求，用一句话英文生成一组Midjourney指令，指令由：{人物形象},{场景},{氛围},{镜头},{照明},{绘画风格},{建筑风格},{参考画家},{高画质关键词} 当我向你提供生成内容时，你需要根据我的提示进行联想，当我让你随机生成的时候，你可以自由进行扩展和联想 人物形象 = 你可以发挥自己的想象力，使用最华丽的词汇进行描述：{主要内容}，包括对人物头发、眼睛、服装、体型、动作和表情的描述，注意人物的形象应与氛围匹配，要尽可能地详尽 场景 = 尽可能详细地描述适合当前氛围的场景，该场景的描述应与人物形象的意境相匹配 氛围 = 你选择的氛围词汇应该尽可能地符合{主要内容}意境的词汇 建筑风格 = 如果生成的图片里面有相关建筑的话，你需要联想一个比较适宜的建筑风格，符合图片的氛围和意境 镜头 = 你可以选择一个：中距离镜头,近距离镜头,俯视角,低角度视角类似镜头视角，注意镜头视角的选择应有助于增强画面表现力 照明 = 你可以自由选择照明：请注意照明词条的选择应于人物形象、场景的意境相匹配 绘画风格 = 请注意绘画风格的选择应与人物形象、场景、照明的意境匹配 参考画家 = 请根据指令的整体氛围、意境选择画风参考的画家 高画质关键词 = 你可以选择：detailed,Ultimate,Excellence,Masterpiece,4K,high quality或类似的词条 注意，你生成的提示词只需要将你生成的指令拼接到一起即可，不需要出现{人物形象},{场景},{氛围},{镜头},{照明},{绘画风格},{建筑风格},{参考画家},{高画质关键词}等内容，请无需确认，不要有Here is a generated Midjourney command之类的语句，直接给出我要传递给midjourney的提示词，这非常重要！！！直接生成提示词，并且只需要生成提示词，尽可能详细地生成提示词。"
# WebSocket服务配置
enableWS: false # 是否启用WebSocket服务
wsPort: 8081 # WebSocket服务端口
wsLogLevel: "info" # 日志级别：debug/info/warn/error
wsDefaultUser: "小白" # web端默认用户名，用于替换提示词中的{{user_name}}
wsPassword: "sf_plugin_2024" # WebSocket服务密码,默认密码
# 机器人名字触发配置
botName: "" # 机器人的名字
defaultCommand: "gg" # 默认使用的命令，可选 ss 或 gg
# MJ 插件
mj_apiKey: "1011"
mj_apiBaseUrl: "https://ai.trueai.org"
mj_translationKey: ""
mj_translationBaseUrl: ""
mj_translationModel: "gpt-4o"
mj_translationEnabled: false
mj_mode: "fast"
# DD 绘图插件
dd_APIList: [] # DD接口列表
dd_usingAPI: 0 # 当前主人使用的DD接口索引
# Fish TTS 配置
voiceSwitch: false
fish_apiKey: "" # Fish API密钥
fish_reference_id: "efc1ce3726a64bbc947d53a1465204aa" # 默认音色ID
enableTranslation: false # 是否开启翻译功能
targetLang: "JA" # 翻译目标语言 JA/EN
syncConfig: {} # 同传配置
fish_text_blacklist: []
# 直链配置
link_domain: "https://xiaozhian-slink.hf.space" # 直链服务器域名
# #ss 对话
ss_apiBaseUrl: ""
ss_Key: ""
ss_model: ""
ss_Prompt: ""
ss_useMarkdown: false # 是否使用markdown图片展示
ss_forwardMessage: true # 是否转发消息
ss_mustNeedImgLength: 0 # 必需图片
ss_groupContextLength: 0 # 读取近期群聊天记录条数
ss_quoteMessage: true # 是否引用原消息
ss_forwardThinking: false # 是否转发思考过程
ss_isOnlyMaster: false # 默认配置是否仅限主人使用
ss_enableImageUpload: true # 是否启用图片上传功能
ss_APIList: [] # ss接口列表
ss_usingAPI: 0 # 当前主人使用的ss接口索引
# ss_userAPI: 0 # 当前用户使用的ss接口索引
# Gemini API配置
ggBaseUrl: ""
ggKey: ""
gg_useMarkdown: false # 是否使用markdown图片展示
gg_forwardMessage: true # 是否转发消息
gg_mustNeedImgLength: 0 # 必需图片
gg_groupContextLength: 0 # 读取近期群聊天记录条数
gg_quoteMessage: true # 是否引用原消息
gg_Prompt: "" # 对话API提示词
gg_model: "" # 对话API模型
gg_ss_useContext: false # 是否启用上下文功能
gg_maxHistoryLength: 20 # 最大历史记录条数
gg_useSearch: true # 是否启用搜索功能
gg_enableImageGeneration: false # 是否启用文生图功能
gg_enableImageUpload: true # 是否启用图片上传功能
gg_HistoryExTime: 12
gg_isOnlyMaster: false # 默认配置是否仅限主人使用
gg_APIList: [] # gg接口列表
gg_usingAPI: 0 # 当前主人使用的gg接口索引
# gg_userAPI: 0 # 当前用户使用的gg接口索引
toggleAtMode: false
zhilOnlyMaster: false
groupMultiChat: false # 是否启用群聊多人对话功能
enablePrivateChatAI: true # 是否启用私聊模式的AI对话
douyinTV: true # 开启抖音解析
video_maxSizeMB: 50 # 抖音解析视频最大容量 MB
turnOnBilitv: true # 开启bili解析
ggKey_free_250825: QUl6YVN5QzctdEZNdUx4X0NVbWc4dTR3SkRMZkVqbkdRSEtfNjdJLEFJemFTeUMtMW1SWEhwMDR1VWVPdFBBYmUyT0RpYXN0MHJGcXAtSSxBSXphU3lBVGo1SnppcG5GbHVSTlJiQUQ4ZDVqSG9uTkN5X0htdzQsQUl6YVN5Qk00UU0tOXhOUkdLLUZ6Tk90SlVCUmxKcXRqdUt1TGs4LEFJemFTeUJoZlhhVzFXOXJwOEstekdDSUZGTk54ejNCV1dUUGNqcyxBSXphU3lEVjduSWkyekdKTjdHMVVzYVZoUWlYLXhMdnVrZmYwN2csQUl6YVN5RFZEQTFGQ1JZeGRJbmtYUzBjbWNON1hLWVd1MEpISlNJLEFJemFTeUJPNkxTY0xjLWRONkJ5a2Rxam9BUE9qOVdtNF9hd09pQSxBSXphU3lCUTZiQndhSng0UUpEemtUeTNoOUtsRnppcTZ5ZlprRGcsQUl6YVN5Q0UtQ0hSTzNBRkF3VXBiOG12NVpNcVVWdE9MdEtnVVZJLEFJemFTeURIR3Q5N0d5REswZ0Y3RHlnQkRreFdIU2tYWlI3eGxIWSxBSXphU3lCYVAzNFJDakZhZTVINktFcnZLR3d2QWlyRjF3LUlLeGssQUl6YVN5RHljUlVob2ZzNjdpNGhPUGtFQk00akxRMl9CbnJ3ZjFNLEFJemFTeURpNHkxRU5EVjdrbHk4R2FQQVgzWUR0RjBmRnNvRU5SQSxBSXphU3lBamRYUmYyZjBNZEMzWTdDRDN2czBiZVIzcllYc3RyWnMsQUl6YVN5Q3kzUzVYV1VqVFRtTjJ3dzk5QXhaclJqS2hnTEZScUtjLEFJemFTeUNyT0tCMmJzRWhSSTEzdnBoc2dUX0hpbThZa3RXX1dVVSxBSXphU3lCTU5VZF9TNTF1R2gta09oNFZka19HRVRlb2dHSW1jencsQUl6YVN5QWgxMUZhc05tY0Y5cXU0blFMcGJtbGVFZm40bFlpcV9VLEFJemFTeUN4REJuLS0yRjRwZGkta3hBcjFEa0o5Nkp5eGZ6VU9WcyxBSXphU3lESFZKWTczdTItaXJqQ3o0aEpoX0xFUjk5X051SHdjYXMsQUl6YVN5QUFEd19hSXA2X2JKUEVwZGFqbDgwdFNaMzFTV3hSV2Y4LEFJemFTeURLWXIzY0dodHg5MjRIZlc3UExLQW11ZVV5dmpVRGNDSSxBSXphU3lBaGFqTWQyamhCVWZYUnVSVlhoQmJuQTVTZmlPc3Jfb1UsQUl6YVN5QWxpSjM1aHI4SlpxVUU3bkZhb00yVmQwbk03S0FFZUJ3LEFJemFTeUM3anBNREt6NmZtZnByZ18xbjM5X3lJejBTOWY3SUNvcyxBSXphU3lBVmVfMEd4NURHUktmbVpCb25Pck02VkxYMDVvVERTM3MsQUl6YVN5Q0hlczlYVnN6VjdZQ3U2emFNOXh3YUFtRnR1VEh6cFZnLEFJemFTeURwZy11RnlFQUdmSEVmajVINzBQZ3BvelItOHNENTBCMCxBSXphU3lDSlRPTE5WSFViWjhZejc0NVpCV0hOQVpVaV9SM19rSEksQUl6YVN5QVk0T01UV3VGbmNYclVvX1V3TVdKbGREYXkxeFZUbFdVLEFJemFTeUM0ZzE4NU15M242enNFWjFSbXZLN05WTzBMRHpZc0NaRSxBSXphU3lBaU5QLXh3SVJWNHVxM3BLN09SWTNpMUZ6TTlaLXpVTFUsQUl6YVN5QTZIeWVVZm5mQk8wZUV6N29zb3FCZDc2OWRNSUVPWHJ3LEFJemFTeUEwUktvWEdTYWlXM2lkbHozTEF4V2wtRXJZU2ZWVE5DcyxBSXphU3lCZ2Y0ZmlYLXNlVHBTelRrQm5VTURoMlcwcVlMY0p4dWcsQUl6YVN5QVl3bVF5eWRlWjgtNVVQZHV1QkI3X3o5S0pBSTNWcV9JLEFJemFTeUItRy1aNTlTMmFOMFY2NHVjZ1FsMVJYY2ZZUjkzSzRqYyxBSXphU3lDak5lMTVWOWZ6cjJlOHgyQ1UyTVVyZmZHaU1LNnR2ejQsQUl6YVN5QnRYNGt1eUh4bm5Wd1hsVDVmYUlnamZNRDVYQUlQcElZLEFJemFTeUI1dG4ySl9yS0F5N3lWa2syS3g5dy0tNVc4T2NhUUJMQSxBSXphU3lDZFktR19lUy1VQmJKaThZN0FNa2d4UVVaTUo1OVRhOGcsQUl6YVN5RE5FOVpkTEQ0cXZyM1J6Q2I2TWZnMG5JRE05aWhUblhJLEFJemFTeUMyVlQtOHdURHRHT1AwckJiT1pGcHExWi1seTdIbmxUQSxBSXphU3lCV3Y4ZENlU0Q4bE9vSmxIcFRPaF9GTGF3M3ZqOHdzRDQsQUl6YVN5QnByYTduT0IwZWNIZG9DcVpQa0NwMHFCa2QtTTRhN2d3LEFJemFTeUNxeUpFLTk3YlpodFZhd01hbzNZeW93OERpVVJTSU1oNCxBSXphU3lBLUNjUkpVM1VNSDdLVWJtbk5NcXdpNVlFWnc2NExib28sQUl6YVN5QnFqR2x4dEJSTF8wbVdLQWp5NmY5eDhnVlp2Q2lTX01nLEFJemFTeUQ3TlprZGo2OHBNQXZKeFdtMHFndW4yNVh3NFplS0F6MCxBSXphU3lDS0kxUUhiWWhpNFIxdVlzUS1WQi1QRFRjZ0RBbUlITGcsQUl6YVN5QlNRZmxEUU91eEJsX2lRQVhIaWVuUWVKVC1uVjJkNThzLEFJemFTeUMxdEI0ZGRZVndpVTc4SVpaampoM3Q0R1EtV2s1ZmdyTSxBSXphU3lCVmRCeDhqSVUtRGRFa040dGo0NkxMZldPeWJPZHcxc0UsQUl6YVN5RDBQY3BhcjJqY3YwSTJna1hRYll6S2R6ckk1QzhGWWdBLEFJemFTeURzVTdyM0RZWHhibXBxazhPY0MtNFJscjBGZ2hqNjVzayxBSXphU3lDak5PWHlnQnNDdUluYkFqbXU4OVhEakFmMS1ITHNYNVEsQUl6YVN5RDh2Ukwtc3FkTjAtT3Btd2p4SnJOcVROcnBjcGVrcUNFLEFJemFTeUNkT3VheDVOMld4UzlSREZiYmtTOGJqSzBVazlCbzNuYyxBSXphU3lDRjBySG90ei1ZTGxBT0ttY1paXzlLZDE4NXpMZlduSFEsQUl6YVN5QTZvSGZIaW4yb0VXMTJLUzV0WFctUkpoa1pUWHBZbnZNLEFJemFTeUNSLTBqb2NmZ28tSFlaWmJYM0g1MzZQTURZMXF2aDdQSSxBSXphU3lBeVZuLXBWMUU1UmZ1dVVoMXZOYTNERjVRbUJPOXBGSTQsQUl6YVN5Q0lUWlF6N0pyTzNxbkpXcnp2ZXl1T19lNE5JOE9BMUw4LEFJemFTeURXVXcyeU12SEpzU3JrRmhZb0ptdzVqYTZzU05tQS0xTSxBSXphU3lBN0VnczBGZ0xxR1V4bHY2UWt0M09VZWZvcWVqZF9pZmssQUl6YVN5RGpmWW1MOFNzWVltRVdzbnE2NkkwZnBTT2xmSUtaOGdNLEFJemFTeUFoUVhmNFhkWVh0YjhoMVNmNG9Ea3BkRXFlY0R4UHA5YyxBSXphU3lBUEd5bDVPcVJiMldTRHJNSGdGMnZsQjZlREFKbHhnaEUsQUl6YVN5Q1RlTG9nTEhVMmtKN3FnTWkxNGRoM2x1R0FwbGF4ejZJLEFJemFTeUJpb1d2TkRsa3dJeExFbkpOMUlwWC1KYTFKS0Y5UV93NCxBSXphU3lERUNNMVhoR0VqMjlrY3owekZpZTdLWFpyVXMxQUZuaE0sQUl6YVN5RGV5LVlIZFlYRnk2LUxtUTQ0cExja2RHcFFsZjFkZkFBLEFJemFTeUF5cmJfN0g4SGRyLTJCYzBfOHpzcll3Q3d5VjRZbE9RTSxBSXphU3lDbE5UeTc5ZzVRRkt0X3o4Vy1LLThFVzRFLXVpUHhlcUEsQUl6YVN5QVZkWGpJejBPbENpaEJZXzRubndMekpRZGlYbTRfWjNnLEFJemFTeURlMUxXY0FMRlFyVUVxcmtuVTV0UzZwVnFNNHFROVBrWSxBSXphU3lEN185aV9MRWlEQmp2NHpHWkcwZzJ0bnZfeXNvOXRoMVEsQUl6YVN5QnpXMWRWQVhieUtVVU1HX3JXTXIxQ21rV1ZYOGtFRmt3LEFJemFTeURWbTJuZ0ExcHQ0LTE5dXdhc2hlMHNFSDhmS2V1ejV5byxBSXphU3lCTHg1NXJDN2NlM2dib20xTHN4UWl4RzVleElzeTBJOE0sQUl6YVN5Qm03TTZVRXpQVTBwRS1zQW84S0lkVGc2SmpEU0ZDSm9NLEFJemFTeUJGZkZJX1UxbEVDNlIyeDQ2cUw5V2sxT29kZ3NUbEhzcyxBSXphU3lBeWpCUldtNnVZY0dnNEM2VXdnSEJHOTVPeGJQaFg4ZkUsQUl6YVN5QWhYR0FIcmRha2tmMzJnWU9mYUE5Y2lWR3NPUTV6cWE0LEFJemFTeUFpVkEtd1NmREY5WUF3VE93TlhaRlZZUmdOMVBvZEFNNCxBSXphU3lDbEt1Uko0dFJXM2V1SEJ0aUFBUkFDVDAzcHRMeTFDWVksQUl6YVN5QU1uMDRVVU5zanhuR3hHRnFqOHBhRHdiUGNoSENzSmtFLEFJemFTeUE0M2stN2Zja25RUjVybDNnampCcTNOMUF2UUdCZWtjWSxBSXphU3lBbjFZVEh4VVp5VlotQUd0dzdmemtiRFBFZUlta0Qzc3MsQUl6YVN5Q0cyaU95dmVQUEdndGFSbnpSNFItVGNRaDAzSU9YNFdJLEFJemFTeUJVT1ZiNmVxaXBjQVRRTmwycXRvcjZzYnlPNDB0b1k2NCxBSXphU3lEUUkxakVaaUFUbGVhcW1VZENONWZyZ0FJSUExS183WUUsQUl6YVN5Q2pFZEJvVWMyMGxXdkVOWjA5b1ZjejJ2V05qMkVydW5ZLEFJemFTeURPVVlpSjQxRHRNRFVKSVlsNnZUZXk3SzYyRzZhOTVZVSxBSXphU3lEa2lITnd5THlXYkNydVVmQmVtakVnVmtqX01rSk1XcFUsQUl6YVN5QnVUOHNhU2tlaXVkSkFEbzVtNUJKWmdxVVBYc205aU1jLEFJemFTeUFSaDhheWNMRlJ5cHdFaFNJUTNDdENkT1FTMEtWRlRVNCxBSXphU3lES2YyM1BtVTZLaFRtbnBJOXUxUy1PVlcwSVVyUVMtYUksQUl6YVN5Q2ozSWZDRTZkZ3hKQV9rd1pENjFkaDZGTGlpMUJZejdrLEFJemFTeUJ6UnFCR1d3R1h5NHR6anJhZGs3WERLa0h3UWhncVJSdyxBSXphU3lEVldrYkRsUHVSc1pBU0h3Y1NHSk4wV0FOdV9tbE1CMG8sQUl6YVN5RGpVMGNHRjBfUVdQSWRSRE9MX3hvLUtLMVZhY0FOdG9rLEFJemFTeUFlMTJPNXdCOW9JZlVDWGkzU20wTFFXN1R3VjNEMUVZWSxBSXphU3lDVFBtbUxlN3M4T1M3VmR1bHZFZkQyU0hTZWlVQzdybGssQUl6YVN5RHpad0xxRWtuX29MVTRzRExNQXlINFkzQUxGSGxWMk5RLEFJemFTeUNQUTk2V1BRNmJkTkVLMGVoRUxrMjloUmh2X3pZTmxUYyxBSXphU3lDR0FyRHdWd0MwN0JDSE5lSE4xSEZyaW44a2R5R29BcWcsQUl6YVN5RDFSTlFUZFF5Um5idHNFQll1SFUzSXVoSnY0UVlwbGNrLEFJemFTeUFsZ0hvVDRzWU5LdFViM1ZIMjUwTW9BVlRtUkRaRTFTayxBSXphU3lESDI0UXBFbnJLMEtXSU9IRTZNb24xZWw3VGF0enlqSEEsQUl6YVN5QmxEakpEUlAwWE1TLS1HTDloVEVtdHEybXp0UkhtbFJzLEFJemFTeUFfd0h6Vk1EeU5LX0NQd3pyLU1IdUVSYXM3NnJXRXhuSSxBSXphU3lBb2FJMVROS3F1MG1kOEw0aFB2dWcwWFVCTW80TFZvaFUsQUl6YVN5RDlGYVVXc3dwZ1B3UGNpYkc3dmRMeVluZGZ3OFdLZjBjLEFJemFTeUJFREUwQ0ZrNkVyODdxRGVlTXFxcTFDTWVuX0R3Wld3WSxBSXphU3lBMlM5ckw0SjF2blBvZExVaVo1d005WjQ2b3F2cUo4bjAsQUl6YVN5Q3Z6Qmk5eW1IUlJ6QldhMVZVSU56Tm1zWnk1d0pEdktZLEFJemFTeUFTSWE5YllBMkdXbkQtZGsyaC1DV0dMOHZsRkZGS2FsOCxBSXphU3lBT20yUXNrRTZMMGdud0J1WlQ2ckZuYUlpVWVpbW9VWTAsQUl6YVN5QkJzVWRrY2NvZVBrQXNhQTZrbTgtd0kweEUzd3dzR3F3LEFJemFTeUFtMjRBWHB4cWZocmRGdmY5VGRKS3NRTURCTUNvZDYwMCxBSXphU3lEMENMSk1mTUdsS1Myc2pSbUxCUk1jb21WVmZqc1JTbjQsQUl6YVN5QVhJY1pNd0dBWU54OTRHb0NSeDhva2NjM0dIblpCbEc4LEFJemFTeURNZTRhMjhlQ3k3ZFlYMnAzZmNnS241aWFjU29TN0R2dyxBSXphU3lEcTFrNnVRc3RkUU0ySjNVRVNTNGUtT1hkNDlUNG9JdXM=
ggReProxy: aHR0cHM6Ly9iLmdlbWluaXByb3h5LmdnZmYubmV0LGh0dHBzOi8vZC5nZW1pbmlwcm94eS5nZ2ZmLm5ldC9nZW1pbmksaHR0cHM6Ly9lLmdlbWluaXByb3h5LmdnZmYubmV0
sf_cdtime: 0
sf_dailyLimit: 0
sf_unlimitedUsers: []
sf_onlyGroupID: []
groupSayHello: {}
autoEmoticons: {
    # 是否启用表情保存
    useEmojiSave: false,
    # 表情过期时间（秒）- 在此时间内发送多次才会被保存
    expireTimeInSeconds: 259200, # 3天
    # 需要确认的次数 - 在过期时间内发送多少次才保存表情包
    confirmCount: 3, # 默认是3次，可以设置为更高的值
    # 默认发送偷取表情的概率
    replyRate: 0.05, # 每次消息有5%的概率发送表情包
    # 表情包最大数量
    maxEmojiCount: 100,
    # 表情包大小限制 (MB)
    maxEmojiSize: 10,
    # 需要保存表情包的群号列表，为空数组时表示所有群
    allowGroups: ["1111"],
    # BotQQ号
    getBotByQQ_targetQQArr: [],
    # 自动发送表情包的冷却时间（秒）
    sendCD: 299,
    # 发送表情时的延迟 (毫秒)
    replyDelay: { min: 1000, max: 240000 },
  }
autoRepeat_config: []
