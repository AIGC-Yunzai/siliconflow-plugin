# SF插件
sf_keys: []
sfBaseUrl: "https://api.siliconflow.cn/v1"
translateModel: "Vendor-A/Qwen/Qwen2-72B-Instruct"
generatePrompt: true
num_inference_steps: 20
imageModel: "black-forest-labs/FLUX.1-schnell"
free_mode: false
simpleMode: false
sf_textToPaint_Prompt: "请按照我的提供的要求，用一句话英文生成一组Midjourney指令，指令由：{人物形象},{场景},{氛围},{镜头},{照明},{绘画风格},{建筑风格},{参考画家},{高画质关键词} 当我向你提供生成内容时，你需要根据我的提示进行联想，当我让你随机生成的时候，你可以自由进行扩展和联想 人物形象 = 你可以发挥自己的想象力，使用最华丽的词汇进行描述：{主要内容}，包括对人物头发、眼睛、服装、体型、动作和表情的描述，注意人物的形象应与氛围匹配，要尽可能地详尽 场景 = 尽可能详细地描述适合当前氛围的场景，该场景的描述应与人物形象的意境相匹配 氛围 = 你选择的氛围词汇应该尽可能地符合{主要内容}意境的词汇 建筑风格 = 如果生成的图片里面有相关建筑的话，你需要联想一个比较适宜的建筑风格，符合图片的氛围和意境 镜头 = 你可以选择一个：中距离镜头,近距离镜头,俯视角,低角度视角类似镜头视角，注意镜头视角的选择应有助于增强画面表现力 照明 = 你可以自由选择照明：请注意照明词条的选择应于人物形象、场景的意境相匹配 绘画风格 = 请注意绘画风格的选择应与人物形象、场景、照明的意境匹配 参考画家 = 请根据指令的整体氛围、意境选择画风参考的画家 高画质关键词 = 你可以选择：detailed,Ultimate,Excellence,Masterpiece,4K,high quality或类似的词条 注意，你生成的提示词只需要将你生成的指令拼接到一起即可，不需要出现{人物形象},{场景},{氛围},{镜头},{照明},{绘画风格},{建筑风格},{参考画家},{高画质关键词}等内容，请无需确认，不要有Here is a generated Midjourney command之类的语句，直接给出我要传递给midjourney的提示词，这非常重要！！！直接生成提示词，并且只需要生成提示词，尽可能详细地生成提示词。"
# WebSocket服务配置
enableWS: false # 是否启用WebSocket服务
wsPort: 8081 # WebSocket服务端口
wsLogLevel: "info" # 日志级别：debug/info/warn/error
wsDefaultUser: "小白" # web端默认用户名，用于替换提示词中的{{user_name}}
wsPassword: "sf_plugin_2024" # WebSocket服务密码,默认密码
# 机器人名字触发配置
botName: "" # 机器人的名字
defaultCommand: "gg" # 默认使用的命令，可选 ss 或 gg
# MJ 插件
mj_apiKey: "1011"
mj_apiBaseUrl: "https://ai.trueai.org"
mj_translationKey: ""
mj_translationBaseUrl: ""
mj_translationModel: "gpt-4o"
mj_translationEnabled: false
mj_mode: "fast"
# DD 绘图插件
dd_APIList: [] # DD接口列表
dd_usingAPI: 0 # 当前主人使用的DD接口索引
# Fish TTS 配置
fish_apiKey: "" # Fish API密钥
fish_reference_id: "efc1ce3726a64bbc947d53a1465204aa" # 默认音色ID
enableTranslation: false # 是否开启翻译功能
targetLang: "JA" # 翻译目标语言 JA/EN
syncConfig: {} # 同传配置
fish_text_blacklist: []
# 直链配置
link_domain: "https://xiaozhian-slink.hf.space" # 直链服务器域名
# #ss 对话
ss_apiBaseUrl: ""
ss_Key: ""
ss_model: ""
ss_Prompt: ""
ss_useMarkdown: false # 是否使用markdown图片展示
ss_forwardMessage: true # 是否转发消息
ss_quoteMessage: true # 是否引用原消息
ss_forwardThinking: false # 是否转发思考过程
ss_isOnlyMaster: false # 默认配置是否仅限主人使用
ss_enableImageUpload: true # 是否启用图片上传功能
ss_APIList: [] # ss接口列表
ss_usingAPI: 0 # 当前主人使用的ss接口索引
# ss_userAPI: 0 # 当前用户使用的ss接口索引
# Gemini API配置
ggBaseUrl: ""
ggKey: ""
gg_useMarkdown: false # 是否使用markdown图片展示
gg_forwardMessage: true # 是否转发消息
gg_quoteMessage: true # 是否引用原消息
gg_Prompt: "" # 对话API提示词
gg_model: "" # 对话API模型
gg_ss_useContext: false # 是否启用上下文功能
gg_maxHistoryLength: 20 # 最大历史记录条数
gg_useSearch: true # 是否启用搜索功能
gg_enableImageGeneration: false # 是否启用文生图功能
gg_enableImageUpload: true # 是否启用图片上传功能
gg_HistoryExTime: 12
gg_isOnlyMaster: false # 默认配置是否仅限主人使用
gg_APIList: [] # gg接口列表
gg_usingAPI: 0 # 当前主人使用的gg接口索引
# gg_userAPI: 0 # 当前用户使用的gg接口索引
toggleAtMode: false
zhilOnlyMaster: false
groupMultiChat: false # 是否启用群聊多人对话功能
enablePrivateChatAI: true # 是否启用私聊模式的AI对话
douyinTV: true # 开启抖音解析
douyin_maxSizeMB: 50 # 抖音解析视频最大容量 MB
turnOnBilitv: true # 开启bili解析
bilitv_max_duration_min: 10 # bili解析视频最大分钟数
ggKey_free_250811: QWl6YVN5Q2RPdWF4NU4yV3hT overlandmS9SREZiYmtTOGJqSzBVazlCbTNuYyxBSXphU3lDRjBySG90ei1ZTGlBT0ttY1paXzlaZDFvMzV6TGZXblhRLGFpemFzeUE2b0hmSGluMm9FVzEyS1M1dFhXLVJQaGtadFhwWW52TSxBSXphU3lDUi0wajVjZmdvLUhZWllaYlgzSDUzNlBNRFkxY3ZoN1BJLEFJWmFzeUF5Vm4tcFYxRTVSZnV1VWgxdk5hM0RGNVFtQk85cEZJNCxBSXphU3lDSVRaUXo3SnJPM3FuSldyenZleXVPX2U0Tkk4T0ExTDgsQWl6YVN5RFdPdXkyTXZISnNScmtGaFlvSm13NWphNnNTTm1BLTFNLEFJWmFzeUE3RWdzMEZncUxnVXhsdjZRa3QwT0Vmb3FlamRfaWZrLEFJWmFzeURqZllNTHhTU3lHbUVXc25xNjZJMGZwU09sZklLWjhHTixBSXphU3lBaFFYZjRYZFlYdGI4aDFTZjRvRGtwZEVxZWNKeFBwOWMsQWl6YVN5QVBHeWw1T3JSYjJXc0RyTUhHUTJ2bEJmNmVEQUpseGdoRSxBSXphU3lDVEVMb2dMSFMyaytNUTE0ZGgzdXNHQXBsYXhzNkk1LEFJWmFzeUJpb1d2TkRsa3dJbExFbkpOMUlwWC1KYTFKSjlRX3c0LEFJWmFzeRBDMUxoR0VKMjlLY3owekZpZTdLWlpyVXMxQUZuaE0sQWl6YVN5RGV5LVlIZFlYRnk2LUxtUTQ0cExja0dkcFFsZjFkZkFBLEFJWmFzeUF5cmJfN0g4SGRyLTJCYzBfOHpzcll3Q3d5VjRZbE9RTSxBSXphU3lDbE5UeTc5ZzVQRkt0X3o4Vy1LLThFVzRFNC11aVB4ZXFBLEFJWmFzeUFWZGhKczBPbENpaEJZXzRubndMelpRZGlYbTRfWjNnLEFJWmFzeURlMUxXY0FMUVJyVUVxcmtudVU1dFM2cWZNNDRxcTlQa1lYLEFJWmFzeUQ3XzlpaV9MRWlEQmRqdTR6R1pHO2cydG52X3lzbzl0aDFRLEFJWmFzeUJ6VzFkVkFYYnZLVVVNR19yV01yMUNta1dWWjhrRUZrdyxBSXphU3lEVm0ybmdBMXB0NC0xOXV3YXNoZTBzRUg4ZktldXo1eW8sQWl6YVN5Qkx4NTVyQzdjZTNnYm9tMUxzWFFpeEcyZXhJc3kwSThNLEFJWmFzeUJtN002VUV6UFUwcEUtc0FvOEtJZFRnNkpkU0ZDSm9NLEFJWmFzeUJGa0ZJX1UxbEVDNlIyZzQ2cTBMOVdrMU9vZGdzVGxIc3MsQWl6YVN5QnliQlJXcTY1Y0c0QzZUd2dIQmc5NU94YlBoWDhmRSxBSXphU3lBaFhHQUhyZGFrZ2YzMkdZT2ZhQTljaVZHN09RNXpxYTQsQWl6YVN5QWlWQS13U2ZERjlZQXdUT1dOWlZWWXJnTjFQb2RBTjQsQWl6YVN5Q2xLdVJKNHRSVzNldUhCdGlBQVJBQ1QwM3B0THkxQ1lZLEFJWmFzeUFtbjA0VVVOc2p4bkd4R0ZxajhwYUR3YlBjaEhzJmtFLEFJWmFzeUE0M2stN2ZjVjJORzVybDNnampCcTNOdEF2UUdCZWtjeSxBSXphU3lBbjFZVEh4VVp5VnolQUd0dzdmemtiRFBFZUltRTMzc1MsQWl6YVN5Q0cyaU95dmVQUEZHYXRhUm56UjRSLVJjUWgwM0lPWHc0SSxBSXphU3lCVU9WYjZlcWlwY0FUUU5sMnF0b3I2c2J5TzQwdG9ZNjQsQWl6YVN5RFFJMWpFWmlBVGxlYXFtVWRDTjVmcmFBIklBMTtfN1lFLEFJWmFzeUNqRWRCb1VjMjBsVnZFTloxOW9WY3oydlZObjJFcnVuWSxBSXphU3lET1VZaUo0MUR0TURVSklZbDZ2VGV5Nks2YTk1WlZVLGFpemFzeURraUhOd3lMeVdiQ3J1VWY0ZW1FR2VrajhNa0pNV3pQVSxBSXphU3lCdVQ4c2FTa2VpdWRKQURvNW01QkpaZ3FVUFhzbTlpTWMsQWl6YVN5QVJoOGF5Y0xGUnlwd0VoU0lRM0N0Q2RPUVUwS1ZGVEU0LEFJWmFzeRBLZjIzUG1VNktObW5wSTl1MVMtT1ZWMElVclFTLWFJLEFJWmFzeUNqM0lmQ0U2ZGd4SkFfa3daRDYxZGg2RkxpYmkxQlkzN2ssQWl6YVN5QnpScUJHV3dHWHk0dHpqcmFkazdYREtoV3FocWVSUnc4LEFJWmFzeURWV2tiRGxQdVJzWUFTSHdjU0dKNTBXTkFuX21sTUgwbyxBSXphU3lEalUwY0dGMF9RV1BJZFRET0xfeG8tS0tSVmFjQU50b2ssQWl6YVN5QWUxM081d0I5b0lmVUNY5UczU20wTFFXN1R3VjNEMTFleXksQWl6YVN5Q1RQbW1MZTdzOEFwUzVWZHVsdkVmRDJTSFNlaVVCN3JsayxBSXphU3lEelpwd0xxRmtuX29MVTRzRExNQXlINHk2QUxGSGwxVjJOUSxBSXphU3lDUFE5NldQUzZiZE5FSzBoRkxrMjlSNGh2X3pZTkxUYyxBSXphU3lDR0FyRHdWd0MwN0JDSE5lSE4xSEZyaW44a2R5R29BcVcsQWl6YVN5RDFSQlF0ZFF5Um5idHNFQllIUjNJdWhKdjRRWXBsY2ssQWl6YVN5QWxnHG9UNHNaWU5LdFViM1ZIMjUwTW9BVm1SRFpFMVNlLEFJWmFzeURIMjRRcEVuckswS1dJT0hFNk1vbjFlbDdUYXR6eWpIQSxBSXphU3lCbERqSkRQUzBYTVMtLUdMOWhURW10cTJtandSUm1sUnMsQWl6YVN5QV93SHpWTRl5Tks1Q1B3enItTUh1RVJhcDcvNnJFeG5JLEFJWmFzeUFvYUkxVE5LcXUwTWR3TDRoUHZ1ZzBYVUJNbzRMVm9oVSxBSXphU3lEOUZhVVdzd3BnUHdQY2liRzd2ZEx5WW5kZnY4V0tmMGM5LEFJWmFzeUJFREUwQ0ZrNkVyODdxRGVlTXFxcTFDTWVuX0R3Wld3WSxBSXphU3lBMlM5ckw0SnF2blBvZF9MVWlaNXdNOVpXNDZvcXZxSjhuMCxBSXphU3lDdnpiSTl5bUhSUndCWjFXVUluek5tc1p5NXdKRHZLWSxBSXphU3lBU0lhOWJ5QTJHV25ELWRrMmgtQ1dHTDh2bEZGRkthbDgsQWl6YVN5QU9tMlFza0U2TDBnbXdCdVpUNnJuYUlVZWltb1VZMCxBSXphU3lCQnNVZGtFmNvZVBra2FzYUE2a204LXdJMHRFM3d3c2dxdyw2QWl6YVN5QW0yNEFScHhxZnhrZkZ2ZjlUZEpLUVNCRE1Db2Q2MDAsQWl6YVN5RDBDTElNZkdsS1Myc2pSbExCUk1jb21WVkZqc1JzbjQsQWl6YVN5QVhJY1pNd0dBWU54OTRHb0NSeDhrb2NjM0dIbkJaR2E4LEFJWmFzeURNZTRhMjhvQ3k3ZFhYMnAzZGNnS241aWFjU29TN0R2dyxBSXphU3lEcTFrNnVRc3RkUU0yakMzVUVTUzRlLXhPZDQ5VDRvSXN1
